Функция ЗагрузитьСообщенияИзТГ() Экспорт

	РезультатЗапроса = GetUpdates(Константы.ПоследнийНомерСообщения.Получить() + 1);

	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(РезультатЗапроса);
	СтруктураJson = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();

	Если СтруктураJson.Свойство("ok") Тогда

		Если СтруктураJson.ok Тогда

			Если СтруктураJson.Свойство("result") Тогда

				Для Каждого Сообщение Из СтруктураJson.result Цикл

					Если Сообщение.Свойство("message") И Сообщение.message.Свойство("chat") Тогда
						Константы.ПоследнийНомерСообщения.Установить(Сообщение.update_id);

						Если Сообщение.message.text = "Показать документы" Тогда

							SendMessage("6891588067", "Бот получил ваше сообщение", ПолучитьКлавиатуруДокументов());
						КонецЕсли;

						Если Сообщение.message.text = "Расходная накладная" Тогда
							SendMessage("6891588067", ПолучениеДокумента("РасходнаяНакладная"),
								ПолучитьКлавиатуруДокументов());
						ИначеЕсли Сообщение.message.text = "Приходная накладная" Тогда
							SendMessage("6891588067", ПолучениеДокумента("ПриходнаяНакладная"),
								ПолучитьКлавиатуруДокументов());
						КонецЕсли;

						Если Сообщение.message.text = "Назад" Тогда
							SendMessage("6891588067", "Бот получил ваше сообщение", ПолучитьКлавиатуру());
						КонецЕсли;
					КонецЕсли;

				КонецЦикла;

			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

КонецФункции

Функция GetUpdates(offset = 0, limit = 0, timeout = 0) Экспорт
	ПараметрыМетода = Новый Массив;

	Если ЗначениеЗаполнено(offset) Тогда
		ПараметрыМетода.Добавить("offset=" + Формат(offset, "ЧРГ = ' '; ЧГ=0"));
	КонецЕсли;

	Результат = WEBHTTP.ОтправитьHTTPЗапрос(Константы.TokenTelegram.Получить(), "getUpdates", ПараметрыМетода);
	Возврат Результат;
КонецФункции

Функция SendMessage(chat_id, text, reply_markup = Неопределено) Экспорт

	ПараметрыМетода = Новый Массив;
	ПараметрыМетода.Добавить("chat_id=" + Формат(chat_id, "ЧРГ = ' '; ЧГ=0"));
	ПараметрыМетода.Добавить("text=" + СокрЛП(text));
	ПараметрыМетода.Добавить("reply_markup=" + reply_markup);

	Результат = WEBHTTP.ОтправитьHTTPЗапрос(Константы.TokenTelegram.Получить(), "sendMessage", ПараметрыМетода);
	Возврат Результат;
КонецФункции
Функция ПолучитьКлавиатуру() Экспорт
	ТекстКнопок = "
				  |{
				  |	""keyboard"":[
				  |
				  |	[""Показать справочники""],
				  |	[""Показать документы"", ""Очистить рабочее пространство""]
				  |]}";

	Возврат ТекстКнопок;
КонецФункции
Функция ПолучениеДокумента(Строка) Экспорт

	Выборка = Неопределено;

	Если Строка = "РасходнаяНакладная" Тогда
		Выборка = Документы.РасходнаяНакладная.Выбрать();
	ИначеЕсли Строка = "ПриходнаяНакладная" Тогда
		Выборка = Документы.ПриходнаяНакладная.Выбрать();
	КонецЕсли;
	Текст = "";
		
	
	Пока Выборка.Следующий() Цикл
		Текст = Текст + СтрШаблон("Дата создания документа %1, его текущий номер %2", Выборка.Дата, Выборка.Номер)
			+ Символы.ПС;
	КонецЦикла;

	Возврат Текст;
КонецФункции
Функция ПолучитьКлавиатуруДокументов()
	ТекстКнопок = "
				  |{
				  |	""keyboard"":[
				  |
				  |	[""Расходная накладная"", ""Приходная накладная""],
				  |	[""Назад""]
				  |]}";

	Возврат ТекстКнопок;
КонецФункции

Функция ПолучитьКлавиатуруВсехДокументов(Параметры)

КонецФункции

Функция ПолучитьВсеДокументы()

КонецФункции